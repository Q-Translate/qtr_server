<?php
/**
 * @file
 * Module file for qtrUser.
 */

module_load_include('inc', 'qtrCore', 'lib/query');
module_load_include('php', 'qtrCore', 'lib/qtr');

require_once(dirname(__FILE__) . '/include/form_alter.inc');
require_once(dirname(__FILE__) . '/include/hook_user.inc');
require_once(dirname(__FILE__) . '/include/oauth2_loginprovider.inc');
require_once(dirname(__FILE__) . '/include/hybridauth.inc');


/**
 * Implementation of hook_permission().
 */
function qtrUser_permission() {
  return array(
    'qtranslate-like' => array(
      'title' => t('Like translations.'),
      'description' => t('Can submit likes for translation suggestions.'),
    ),
    'qtranslate-translate' => array(
      'title' => t('Suggest new translations.'),
      'description' => t('Can submit new translation suggestions.'),
    ),
    'qtranslate-flag' => array(
      'title' => t('Flag translations.'),
      'description' => t('Can flag translations as inaproppriate.'),
    ),
    'qtranslate-import' => array(
      'title' => t('Import translations.'),
      'description' => t('Can import to Q-Translate new translations.'),
    ),
    'qtranslate-resolve' => array(
      'title' => t('Resolve issues.'),
      'description' => t('Can resolve flag issues and other problems.'),
    ),
    'qtranslate-admin' => array(
      'title' => t('Administer Q-Translate.'),
      'description' => t('Can perform administration tasks for Q-Translate.'),
    ),
  );
}

/**
 * Implements hook_drupal_goto_alter().
 */
function qtrUser_drupal_goto_alter(&$path, &$options, &$http_response_code) {
  if ( ($path == 'user/login') and isset($_GET['redirect_uri'])) {
    // Add the language to the destination, so that in case of registration
    // through external accounts, it does not stop to ask for the language.
    switch ($_GET['redirect_uri']) {
      case 'https://sq.qtranslate.net/oauth2/authorized':
          $options['query']['destination'] .= '?lng=sq';
          break;
      }
  }
}

/**
 * Implements hook_menu_alter().
 *
 * Change the user account menu:
 *  - Remove the View tab.
 *  - Make the Profile tab the default one.
 *  - Change the title of hybridauth.
 */
function qtrUser_menu_alter(&$items) {
  $user = $items['user/%user'];
  $profile = $items['user/%user/edit-profile'];

  // Remove the View tab.
  unset($items['user/%user/view']);

  // Make the Profile tab the default one.
  $items['user/%user'] = $profile;
  $items['user/%user']['title callback'] = $user['title callback'];
  $items['user/%user']['title arguments'] = $user['title arguments'];
  $items['user/%user']['menu_name'] = $user['menu_name'];
  unset($items['user/%user']['type']);
  unset($items['user/%user']['weight']);

  $items['user/%user/edit-profile'] = array(
    'type' =>  MENU_DEFAULT_LOCAL_TASK,
    'title' => $profile['title'],
    'weight' => $profile['weight'],
    'module' => $profile['module'],
  );

  // Change the title of hybridauth.
  $items['user/%user/hybridauth']['title'] = t('Authentication');
}
